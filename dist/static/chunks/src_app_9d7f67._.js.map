{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/garga/OneDrive/Desktop/frxsh/src/app/components/textgen/text.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect } from \"react\";\r\nimport { motion, stagger, useAnimate } from \"framer-motion\";\r\nimport { cn } from \"../utils\";\r\n\r\nexport const TextGenerateEffect = ({\r\n  words,\r\n  className,\r\n  filter = true,\r\n  duration = 0.5,\r\n}: {\r\n  words: string;\r\n  className?: string;\r\n  filter?: boolean;\r\n  duration?: number;\r\n}) => {\r\n  const [scope, animate] = useAnimate();\r\n  const wordsArray = words.split(\" \");\r\n  useEffect(() => {\r\n    animate(\r\n      \"span\",\r\n      {\r\n        opacity: 1,\r\n        filter: filter ? \"blur(0px)\" : \"none\",\r\n      },\r\n      {\r\n        duration: duration ? duration : 1,\r\n        delay: stagger(0.2),\r\n      }\r\n    );\r\n  }, [scope.current]);\r\n\r\n  const renderWords = () => {\r\n    return (\r\n      <motion.div ref={scope}>\r\n        {wordsArray.map((word, idx) => {\r\n          return (\r\n            <motion.span\r\n              key={word + idx}\r\n              className=\"dark:text-white text-black opacity-0\"\r\n              style={{\r\n                filter: filter ? \"blur(10px)\" : \"none\",\r\n              }}\r\n            >\r\n              {word}{\" \"}\r\n            </motion.span>\r\n          );\r\n        })}\r\n      </motion.div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"font-bold\", className)}>\r\n      <div className=\"mt-4\">\r\n        <div className=\" dark:text-white text-black text-2xl leading-snug tracking-wide\">\r\n          {renderWords()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AADA;AAAA;AAAA;;;AAFA;;;;AAKO,MAAM,qBAAqB,CAAC,EACjC,KAAK,EACL,SAAS,EACT,SAAS,IAAI,EACb,WAAW,GAAG,EAMf;;IACC,MAAM,CAAC,OAAO,QAAQ,GAAG,CAAA,GAAA,0LAAA,CAAA,aAAU,AAAD;IAClC,MAAM,aAAa,MAAM,KAAK,CAAC;IAC/B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACR,QACE,QACA;gBACE,SAAS;gBACT,QAAQ,SAAS,cAAc;YACjC,GACA;gBACE,UAAU,WAAW,WAAW;gBAChC,OAAO,CAAA,GAAA,mLAAA,CAAA,UAAO,AAAD,EAAE;YACjB;QAEJ;uCAAG;QAAC,MAAM,OAAO;KAAC;IAElB,MAAM,cAAc;QAClB,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;YAAC,KAAK;sBACd,WAAW,GAAG,CAAC,CAAC,MAAM;gBACrB,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,IAAI;oBAEV,WAAU;oBACV,OAAO;wBACL,QAAQ,SAAS,eAAe;oBAClC;;wBAEC;wBAAM;;mBANF,OAAO;;;;;YASlB;;;;;;IAGN;IAEA,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,oIAAA,CAAA,KAAE,AAAD,EAAE,aAAa;kBAC9B,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;0BACZ;;;;;;;;;;;;;;;;AAKX;GAxDa;;QAWc,0LAAA,CAAA,aAAU;;;KAXxB"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/garga/OneDrive/Desktop/frxsh/src/app/components/typewriter/typewriter.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { cn } from \"../utils\";\r\nimport { motion, stagger, useAnimate, useInView } from \"framer-motion\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const TypewriterEffect = ({\r\n  words,\r\n  className,\r\n  cursorClassName,\r\n}: {\r\n  words: {\r\n    text: string;\r\n    className?: string;\r\n  }[];\r\n  className?: string;\r\n  cursorClassName?: string;\r\n}) => {\r\n  // split text inside of words into array of characters\r\n  const wordsArray = words.map((word) => {\r\n    return {\r\n      ...word,\r\n      text: word.text.split(\"\"),\r\n    };\r\n  });\r\n\r\n  const [scope, animate] = useAnimate();\r\n  const isInView = useInView(scope);\r\n  useEffect(() => {\r\n    if (isInView) {\r\n      animate(\r\n        \"span\",\r\n        {\r\n          display: \"inline-block\",\r\n          opacity: 1,\r\n          width: \"fit-content\",\r\n        },\r\n        {\r\n          duration: 0.3,\r\n          delay: stagger(0.1),\r\n          ease: \"easeInOut\",\r\n        }\r\n      );\r\n    }\r\n  }, [isInView]);\r\n\r\n  const renderWords = () => {\r\n    return (\r\n      <motion.div ref={scope} className=\"inline\">\r\n        {wordsArray.map((word, idx) => {\r\n          return (\r\n            <div key={`word-${idx}`} className=\"inline-block\">\r\n              {word.text.map((char, index) => (\r\n                <motion.span\r\n                  initial={{}}\r\n                  key={`char-${index}`}\r\n                  className={cn(\r\n                    `dark:text-white text-black opacity-0 hidden`,\r\n                    word.className\r\n                  )}\r\n                >\r\n                  {char}\r\n                </motion.span>\r\n              ))}\r\n              &nbsp;\r\n            </div>\r\n          );\r\n        })}\r\n      </motion.div>\r\n    );\r\n  };\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"text-base sm:text-xl md:text-3xl lg:text-5xl font-bold text-center\",\r\n        className\r\n      )}\r\n    >\r\n      {renderWords()}\r\n      <motion.span\r\n        initial={{\r\n          opacity: 0,\r\n        }}\r\n        animate={{\r\n          opacity: 1,\r\n        }}\r\n        transition={{\r\n          duration: 0.8,\r\n          repeat: Infinity,\r\n          repeatType: \"reverse\",\r\n        }}\r\n        className={cn(\r\n          \"inline-block rounded-sm w-[4px] h-4 md:h-6 lg:h-10 bg-blue-500\",\r\n          cursorClassName\r\n        )}\r\n      ></motion.span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TypewriterEffectSmooth = ({\r\n  words,\r\n  className,\r\n  cursorClassName,\r\n}: {\r\n  words: {\r\n    text: string;\r\n    className?: string;\r\n  }[];\r\n  className?: string;\r\n  cursorClassName?: string;\r\n}) => {\r\n  // split text inside of words into array of characters\r\n  const wordsArray = words.map((word) => {\r\n    return {\r\n      ...word,\r\n      text: word.text.split(\"\"),\r\n    };\r\n  });\r\n  const renderWords = () => {\r\n    return (\r\n      <div>\r\n        {wordsArray.map((word, idx) => {\r\n          return (\r\n            <div key={`word-${idx}`} className=\"inline-block\">\r\n              {word.text.map((char, index) => (\r\n                <span\r\n                  key={`char-${index}`}\r\n                  className={cn(`dark:text-white text-black `, word.className)}\r\n                >\r\n                  {char}\r\n                </span>\r\n              ))}\r\n              &nbsp;\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"flex space-x-1 my-6\", className)}>\r\n      <motion.div\r\n        className=\"overflow-hidden pb-2\"\r\n        initial={{\r\n          width: \"0%\",\r\n        }}\r\n        whileInView={{\r\n          width: \"fit-content\",\r\n        }}\r\n        transition={{\r\n          duration: 2,\r\n          ease: \"linear\",\r\n          delay: 1,\r\n        }}\r\n      >\r\n        <div\r\n          className=\"text-xs sm:text-base md:text-xl lg:text:3xl xl:text-5xl font-bold\"\r\n          style={{\r\n            whiteSpace: \"nowrap\",\r\n          }}\r\n        >\r\n          {renderWords()}{\" \"}\r\n        </div>{\" \"}\r\n      </motion.div>\r\n      <motion.span\r\n        initial={{\r\n          opacity: 0,\r\n        }}\r\n        animate={{\r\n          opacity: 1,\r\n        }}\r\n        transition={{\r\n          duration: 0.8,\r\n\r\n          repeat: Infinity,\r\n          repeatType: \"reverse\",\r\n        }}\r\n        className={cn(\r\n          \"block rounded-sm w-[4px]  h-4 sm:h-6 xl:h-12 bg-blue-500\",\r\n          cursorClassName\r\n        )}\r\n      ></motion.span>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/garga/OneDrive/Desktop/frxsh/src/app/components/parallax/effect.tsx"],"sourcesContent":["\"use client\";\r\nimport { useScroll, useTransform } from \"framer-motion\";\r\nimport { useRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport Image from \"next/image\";\r\nimport { cn } from \"../utils\";\r\n\r\nexport const ParallaxScroll = ({\r\n  images,\r\n  className,\r\n}: {\r\n  images: string[];\r\n  className?: string;\r\n}) => {\r\n  const gridRef = useRef<any>(null);\r\n  const { scrollYProgress } = useScroll({\r\n    container: gridRef, // remove this if your container is not fixed height\r\n    offset: [\"start start\", \"end start\"], // remove this if your container is not fixed height\r\n  });\r\n\r\n  const translateFirst = useTransform(scrollYProgress, [0, 1], [0, -200]);\r\n  const translateSecond = useTransform(scrollYProgress, [0, 1], [0, 200]);\r\n  const translateThird = useTransform(scrollYProgress, [0, 1], [0, -200]);\r\n\r\n  const third = Math.ceil(images.length / 3);\r\n\r\n  const firstPart = images.slice(0, third);\r\n  const secondPart = images.slice(third, 2 * third);\r\n  const thirdPart = images.slice(2 * third);\r\n\r\n  return (\r\n    <div\r\n      className={cn(\"h-[40rem] items-start overflow-y-auto w-full\", className)}\r\n      ref={gridRef}\r\n    >\r\n      <div\r\n        className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 items-start  max-w-5xl mx-auto gap-10 py-40 px-10\"\r\n        ref={gridRef}\r\n      >\r\n        <div className=\"grid gap-10\">\r\n          {firstPart.map((el, idx) => (\r\n            <motion.div\r\n              style={{ y: translateFirst }} // Apply the translateY motion value here\r\n              key={\"grid-1\" + idx}\r\n            >\r\n              <Image\r\n                src={el}\r\n                className=\"h-80 w-full object-cover object-left-top rounded-lg gap-10 !m-0 !p-0\"\r\n                height=\"400\"\r\n                width=\"400\"\r\n                alt=\"thumbnail\"\r\n              />\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n        <div className=\"grid gap-10\">\r\n          {secondPart.map((el, idx) => (\r\n            <motion.div style={{ y: translateSecond }} key={\"grid-2\" + idx}>\r\n              <Image\r\n                src={el}\r\n                className=\"h-80 w-full object-cover object-left-top rounded-lg gap-10 !m-0 !p-0\"\r\n                height=\"400\"\r\n                width=\"400\"\r\n                alt=\"thumbnail\"\r\n              />\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n        <div className=\"grid gap-10\">\r\n          {thirdPart.map((el, idx) => (\r\n            <motion.div style={{ y: translateThird }} key={\"grid-3\" + idx}>\r\n              <Image\r\n                src={el}\r\n                className=\"h-80 w-full object-cover object-left-top rounded-lg gap-10 !m-0 !p-0\"\r\n                height=\"400\"\r\n                width=\"400\"\r\n                alt=\"thumbnail\"\r\n              />\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AAJA;AAAA;AAEA;;;AAHA;;;;;;AAOO,MAAM,iBAAiB,CAAC,EAC7B,MAAM,EACN,SAAS,EAIV;;IACC,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAO;IAC5B,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,4KAAA,CAAA,YAAS,AAAD,EAAE;QACpC,WAAW;QACX,QAAQ;YAAC;YAAe;SAAY;IACtC;IAEA,MAAM,iBAAiB,CAAA,GAAA,+KAAA,CAAA,eAAY,AAAD,EAAE,iBAAiB;QAAC;QAAG;KAAE,EAAE;QAAC;QAAG,CAAC;KAAI;IACtE,MAAM,kBAAkB,CAAA,GAAA,+KAAA,CAAA,eAAY,AAAD,EAAE,iBAAiB;QAAC;QAAG;KAAE,EAAE;QAAC;QAAG;KAAI;IACtE,MAAM,iBAAiB,CAAA,GAAA,+KAAA,CAAA,eAAY,AAAD,EAAE,iBAAiB;QAAC;QAAG;KAAE,EAAE;QAAC;QAAG,CAAC;KAAI;IAEtE,MAAM,QAAQ,KAAK,IAAI,CAAC,OAAO,MAAM,GAAG;IAExC,MAAM,YAAY,OAAO,KAAK,CAAC,GAAG;IAClC,MAAM,aAAa,OAAO,KAAK,CAAC,OAAO,IAAI;IAC3C,MAAM,YAAY,OAAO,KAAK,CAAC,IAAI;IAEnC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,oIAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC9D,KAAK;kBAEL,cAAA,6LAAC;YACC,WAAU;YACV,KAAK;;8BAEL,6LAAC;oBAAI,WAAU;8BACZ,UAAU,GAAG,CAAC,CAAC,IAAI,oBAClB,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;4BACT,OAAO;gCAAE,GAAG;4BAAe;sCAG3B,cAAA,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAK;gCACL,WAAU;gCACV,QAAO;gCACP,OAAM;gCACN,KAAI;;;;;;2BAPD,WAAW;;;;;;;;;;8BAYtB,6LAAC;oBAAI,WAAU;8BACZ,WAAW,GAAG,CAAC,CAAC,IAAI,oBACnB,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;4BAAC,OAAO;gCAAE,GAAG;4BAAgB;sCACtC,cAAA,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAK;gCACL,WAAU;gCACV,QAAO;gCACP,OAAM;gCACN,KAAI;;;;;;2BANwC,WAAW;;;;;;;;;;8BAW/D,6LAAC;oBAAI,WAAU;8BACZ,UAAU,GAAG,CAAC,CAAC,IAAI,oBAClB,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;4BAAC,OAAO;gCAAE,GAAG;4BAAe;sCACrC,cAAA,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAK;gCACL,WAAU;gCACV,QAAO;gCACP,OAAM;gCACN,KAAI;;;;;;2BANuC,WAAW;;;;;;;;;;;;;;;;;;;;;AActE;GA7Ea;;QAQiB,4KAAA,CAAA,YAAS;QAKd,+KAAA,CAAA,eAAY;QACX,+KAAA,CAAA,eAAY;QACb,+KAAA,CAAA,eAAY;;;KAfxB"}},
    {"offset": {"line": 495, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}